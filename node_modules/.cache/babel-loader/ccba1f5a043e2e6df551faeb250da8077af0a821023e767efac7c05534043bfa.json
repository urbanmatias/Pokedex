{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urban\\\\OneDrive\\\\Escritorio\\\\PROYECTO PORTFOLIO\\\\pokedex\\\\src\\\\components\\\\PokemonCard.js\",\n  _s = $RefreshSig$();\n//import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport bootstrap from \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../stylesheets/PokemonCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PokemonCard = props => {\n  _s();\n  const [pokemon, setPokemon] = useState([]);\n\n  /*useEffect(() => {\r\n    fetch(props.url)\r\n      .then((response) => response.json())\r\n      .then((poke) => {\r\n        setPokemon(poke);\r\n      });\r\n  }, []);\r\n  return (\r\n    pokemon && (\r\n      <div className={pokemon.types && pokemon.types[0].type.name + \" card\"}>\r\n        <div className=\"container-img-number\">\r\n          <h2>#{pokemon.id}</h2>\r\n          <img\r\n            src={pokemon.sprites && pokemon.sprites.front_default}\r\n            className=\"card-img-top img-pokemon\"\r\n            alt=\"img-pokemon\"\r\n          />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            {pokemon.name && pokemon.name.toUpperCase()}\r\n          </h5>\r\n          <p className=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p>\r\n        </div>\r\n        <ul className=\"\">\r\n          {pokemon.types &&\r\n            pokemon.types.map((type) => (\r\n              <li className=\"list-group-item\" key={type.type.name}>\r\n                {type.type.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n  };*/\n  return pokemon && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: pokemon.types && pokemon.types[0].type.name + \" card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-img-number\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"#\", props.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.sprites && props.sprites.front_default,\n        className: \"card-img-top img-pokemon\",\n        alt: \"img-pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: pokemon.name && pokemon.name.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"\",\n      children: pokemon.types && pokemon.types.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: type.type.name\n      }, type.type.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(PokemonCard, \"JX003AizWtQQ5g0hQS/KaEBeukY=\");\n_c = PokemonCard;\nvar _c;\n$RefreshReg$(_c, \"PokemonCard\");","map":{"version":3,"names":["useState","bootstrap","jsxDEV","_jsxDEV","PokemonCard","props","_s","pokemon","setPokemon","className","types","type","name","children","id","fileName","_jsxFileName","lineNumber","columnNumber","src","sprites","front_default","alt","toUpperCase","map","_c","$RefreshReg$"],"sources":["C:/Users/urban/OneDrive/Escritorio/PROYECTO PORTFOLIO/pokedex/src/components/PokemonCard.js"],"sourcesContent":["//import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport bootstrap from \"bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../stylesheets/PokemonCard.css\";\r\n\r\nexport const PokemonCard = (props) => {\r\n  const [pokemon, setPokemon] = useState([]);\r\n\r\n  /*useEffect(() => {\r\n    fetch(props.url)\r\n      .then((response) => response.json())\r\n      .then((poke) => {\r\n        setPokemon(poke);\r\n      });\r\n  }, []);\r\n  return (\r\n    pokemon && (\r\n      <div className={pokemon.types && pokemon.types[0].type.name + \" card\"}>\r\n        <div className=\"container-img-number\">\r\n          <h2>#{pokemon.id}</h2>\r\n          <img\r\n            src={pokemon.sprites && pokemon.sprites.front_default}\r\n            className=\"card-img-top img-pokemon\"\r\n            alt=\"img-pokemon\"\r\n          />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            {pokemon.name && pokemon.name.toUpperCase()}\r\n          </h5>\r\n          <p className=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p>\r\n        </div>\r\n        <ul className=\"\">\r\n          {pokemon.types &&\r\n            pokemon.types.map((type) => (\r\n              <li className=\"list-group-item\" key={type.type.name}>\r\n                {type.type.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};*/\r\n  return (\r\n    pokemon && (\r\n      <div className={pokemon.types && pokemon.types[0].type.name + \" card\"}>\r\n        <div className=\"container-img-number\">\r\n          <h2>#{props.id}</h2>\r\n          <img\r\n            src={props.sprites && props.sprites.front_default}\r\n            className=\"card-img-top img-pokemon\"\r\n            alt=\"img-pokemon\"\r\n          />\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">\r\n            {pokemon.name && pokemon.name.toUpperCase()}\r\n          </h5>\r\n          <p className=\"card-text\">\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </p>\r\n        </div>\r\n        <ul className=\"\">\r\n          {pokemon.types &&\r\n            pokemon.types.map((type) => (\r\n              <li className=\"list-group-item\" key={type.type.name}>\r\n                {type.type.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,sCAAsC;AAC7C,OAAO,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OACEO,OAAO,iBACLJ,OAAA;IAAKM,SAAS,EAAEF,OAAO,CAACG,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,GAAG,OAAQ;IAAAC,QAAA,gBACpEV,OAAA;MAAKM,SAAS,EAAC,sBAAsB;MAAAI,QAAA,gBACnCV,OAAA;QAAAU,QAAA,GAAI,GAAC,EAACR,KAAK,CAACS,EAAE;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACpBf,OAAA;QACEgB,GAAG,EAAEd,KAAK,CAACe,OAAO,IAAIf,KAAK,CAACe,OAAO,CAACC,aAAc;QAClDZ,SAAS,EAAC,0BAA0B;QACpCa,GAAG,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNf,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAI,QAAA,gBACxBV,OAAA;QAAIM,SAAS,EAAC,YAAY;QAAAI,QAAA,EACvBN,OAAO,CAACK,IAAI,IAAIL,OAAO,CAACK,IAAI,CAACW,WAAW;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxC,eACLf,OAAA;QAAGM,SAAS,EAAC,WAAW;QAAAI,QAAA,EAAC;MAGzB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,eACNf,OAAA;MAAIM,SAAS,EAAC,EAAE;MAAAI,QAAA,EACbN,OAAO,CAACG,KAAK,IACZH,OAAO,CAACG,KAAK,CAACc,GAAG,CAAEb,IAAI,iBACrBR,OAAA;QAAIM,SAAS,EAAC,iBAAiB;QAAAI,QAAA,EAC5BF,IAAI,CAACA,IAAI,CAACC;MAAI,GADoBD,IAAI,CAACA,IAAI,CAACC,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAER;AAEL,CAAC;AAACZ,EAAA,CAzEWF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}